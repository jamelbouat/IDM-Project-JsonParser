/*
 * generated by Xtext 2.23.0
 */
grammar InternalJsonParser;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.idmproject.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.idmproject.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.idmproject.services.JsonParserGrammarAccess;

}
@parser::members {
	private JsonParserGrammarAccess grammarAccess;

	public void setGrammarAccess(JsonParserGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleJsonModel
entryRuleJsonModel
:
{ before(grammarAccess.getJsonModelRule()); }
	 ruleJsonModel
{ after(grammarAccess.getJsonModelRule()); } 
	 EOF 
;

// Rule JsonModel
ruleJsonModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonModelAccess().getGroup()); }
		(rule__JsonModel__Group__0)
		{ after(grammarAccess.getJsonModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
		(rule__Instruction__Alternatives)
		{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoad
entryRuleLoad
:
{ before(grammarAccess.getLoadRule()); }
	 ruleLoad
{ after(grammarAccess.getLoadRule()); } 
	 EOF 
;

// Rule Load
ruleLoad 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoadAccess().getGroup()); }
		(rule__Load__Group__0)
		{ after(grammarAccess.getLoadAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelect
entryRuleSelect
:
{ before(grammarAccess.getSelectRule()); }
	 ruleSelect
{ after(grammarAccess.getSelectRule()); } 
	 EOF 
;

// Rule Select
ruleSelect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectAccess().getGroup()); }
		(rule__Select__Group__0)
		{ after(grammarAccess.getSelectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStore
entryRuleStore
:
{ before(grammarAccess.getStoreRule()); }
	 ruleStore
{ after(grammarAccess.getStoreRule()); } 
	 EOF 
;

// Rule Store
ruleStore 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStoreAccess().getGroup()); }
		(rule__Store__Group__0)
		{ after(grammarAccess.getStoreAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFile
entryRuleFile
:
{ before(grammarAccess.getFileRule()); }
	 ruleFile
{ after(grammarAccess.getFileRule()); } 
	 EOF 
;

// Rule File
ruleFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFileAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getFileAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSave
entryRuleSave
:
{ before(grammarAccess.getSaveRule()); }
	 ruleSave
{ after(grammarAccess.getSaveRule()); } 
	 EOF 
;

// Rule Save
ruleSave 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSaveAccess().getGroup()); }
		(rule__Save__Group__0)
		{ after(grammarAccess.getSaveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrint
entryRulePrint
:
{ before(grammarAccess.getPrintRule()); }
	 rulePrint
{ after(grammarAccess.getPrintRule()); } 
	 EOF 
;

// Rule Print
rulePrint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrintAccess().getGroup()); }
		(rule__Print__Group__0)
		{ after(grammarAccess.getPrintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInsert
entryRuleInsert
:
{ before(grammarAccess.getInsertRule()); }
	 ruleInsert
{ after(grammarAccess.getInsertRule()); } 
	 EOF 
;

// Rule Insert
ruleInsert 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInsertAccess().getGroup()); }
		(rule__Insert__Group__0)
		{ after(grammarAccess.getInsertAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModify
entryRuleModify
:
{ before(grammarAccess.getModifyRule()); }
	 ruleModify
{ after(grammarAccess.getModifyRule()); } 
	 EOF 
;

// Rule Modify
ruleModify 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModifyAccess().getGroup()); }
		(rule__Modify__Group__0)
		{ after(grammarAccess.getModifyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompute
entryRuleCompute
:
{ before(grammarAccess.getComputeRule()); }
	 ruleCompute
{ after(grammarAccess.getComputeRule()); } 
	 EOF 
;

// Rule Compute
ruleCompute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComputeAccess().getAlternatives()); }
		(rule__Compute__Alternatives)
		{ after(grammarAccess.getComputeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSum
entryRuleSum
:
{ before(grammarAccess.getSumRule()); }
	 ruleSum
{ after(grammarAccess.getSumRule()); } 
	 EOF 
;

// Rule Sum
ruleSum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSumAccess().getGroup()); }
		(rule__Sum__Group__0)
		{ after(grammarAccess.getSumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProduct
entryRuleProduct
:
{ before(grammarAccess.getProductRule()); }
	 ruleProduct
{ after(grammarAccess.getProductRule()); } 
	 EOF 
;

// Rule Product
ruleProduct 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProductAccess().getGroup()); }
		(rule__Product__Group__0)
		{ after(grammarAccess.getProductAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKey
entryRuleKey
:
{ before(grammarAccess.getKeyRule()); }
	 ruleKey
{ after(grammarAccess.getKeyRule()); } 
	 EOF 
;

// Rule Key
ruleKey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getKeyAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArray
entryRuleArray
:
{ before(grammarAccess.getArrayRule()); }
	 ruleArray
{ after(grammarAccess.getArrayRule()); } 
	 EOF 
;

// Rule Array
ruleArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayAccess().getAlternatives()); }
		(rule__Array__Alternatives)
		{ after(grammarAccess.getArrayAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEOL
entryRuleEOL
:
{ before(grammarAccess.getEOLRule()); }
	 ruleEOL
{ after(grammarAccess.getEOLRule()); } 
	 EOF 
;

// Rule EOL
ruleEOL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEOLAccess().getLineFeedKeyword()); }
		'\n'
		{ after(grammarAccess.getEOLAccess().getLineFeedKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getSelectAssignment_0()); }
		(rule__Instruction__SelectAssignment_0)
		{ after(grammarAccess.getInstructionAccess().getSelectAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getStoreAssignment_1()); }
		(rule__Instruction__StoreAssignment_1)
		{ after(grammarAccess.getInstructionAccess().getStoreAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getSaveAssignment_2()); }
		(rule__Instruction__SaveAssignment_2)
		{ after(grammarAccess.getInstructionAccess().getSaveAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getPrintAssignment_3()); }
		(rule__Instruction__PrintAssignment_3)
		{ after(grammarAccess.getInstructionAccess().getPrintAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getInsertAssignment_4()); }
		(rule__Instruction__InsertAssignment_4)
		{ after(grammarAccess.getInstructionAccess().getInsertAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getModifyAssignment_5()); }
		(rule__Instruction__ModifyAssignment_5)
		{ after(grammarAccess.getInstructionAccess().getModifyAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getComputeAssignment_6()); }
		(rule__Instruction__ComputeAssignment_6)
		{ after(grammarAccess.getInstructionAccess().getComputeAssignment_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compute__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComputeAccess().getSumParserRuleCall_0()); }
		ruleSum
		{ after(grammarAccess.getComputeAccess().getSumParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComputeAccess().getProductParserRuleCall_1()); }
		ruleProduct
		{ after(grammarAccess.getComputeAccess().getProductParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getStringValueAssignment_0()); }
		(rule__Value__StringValueAssignment_0)
		{ after(grammarAccess.getValueAccess().getStringValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getIntegerValueAssignment_1()); }
		(rule__Value__IntegerValueAssignment_1)
		{ after(grammarAccess.getValueAccess().getIntegerValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getArrayAssignment_2()); }
		(rule__Value__ArrayAssignment_2)
		{ after(grammarAccess.getValueAccess().getArrayAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayAccess().getGroup_0()); }
		(rule__Array__Group_0__0)
		{ after(grammarAccess.getArrayAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getArrayAccess().getGroup_1()); }
		(rule__Array__Group_1__0)
		{ after(grammarAccess.getArrayAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonModel__Group__0__Impl
	rule__JsonModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonModelAccess().getBaseLoadAssignment_0()); }
	(rule__JsonModel__BaseLoadAssignment_0)
	{ after(grammarAccess.getJsonModelAccess().getBaseLoadAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonModelAccess().getInstructionsAssignment_1()); }
	(rule__JsonModel__InstructionsAssignment_1)*
	{ after(grammarAccess.getJsonModelAccess().getInstructionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__0__Impl
	rule__Load__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getLoadKeyword_0()); }
	'.load('
	{ after(grammarAccess.getLoadAccess().getLoadKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__1__Impl
	rule__Load__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getFileAssignment_1()); }
	(rule__Load__FileAssignment_1)
	{ after(grammarAccess.getLoadAccess().getFileAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__2__Impl
	rule__Load__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getLoadAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getEOLParserRuleCall_3()); }
	ruleEOL
	{ after(grammarAccess.getLoadAccess().getEOLParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__0__Impl
	rule__Select__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSelectKeyword_0()); }
	'.select('
	{ after(grammarAccess.getSelectAccess().getSelectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__1__Impl
	rule__Select__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getExpressionAssignment_1()); }
	(rule__Select__ExpressionAssignment_1)
	{ after(grammarAccess.getSelectAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__2__Impl
	rule__Select__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getSelectAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getEOLParserRuleCall_3()); }
	ruleEOL
	{ after(grammarAccess.getSelectAccess().getEOLParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__0__Impl
	rule__Store__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getStoreKeyword_0()); }
	'.store('
	{ after(grammarAccess.getStoreAccess().getStoreKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__1__Impl
	rule__Store__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getFileAssignment_1()); }
	(rule__Store__FileAssignment_1)
	{ after(grammarAccess.getStoreAccess().getFileAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__2__Impl
	rule__Store__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getStoreAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getEOLParserRuleCall_3()); }
	ruleEOL
	{ after(grammarAccess.getStoreAccess().getEOLParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Save__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Save__Group__0__Impl
	rule__Save__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaveAccess().getSaveKeyword_0()); }
	'.save()'
	{ after(grammarAccess.getSaveAccess().getSaveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Save__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaveAccess().getEOLParserRuleCall_1()); }
	ruleEOL
	{ after(grammarAccess.getSaveAccess().getEOLParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Print__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Print__Group__0__Impl
	rule__Print__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintAccess().getPrintKeyword_0()); }
	'.print('
	{ after(grammarAccess.getPrintAccess().getPrintKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Print__Group__1__Impl
	rule__Print__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintAccess().getExpressionAssignment_1()); }
	(rule__Print__ExpressionAssignment_1)
	{ after(grammarAccess.getPrintAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Print__Group__2__Impl
	rule__Print__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getPrintAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Print__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintAccess().getEOLParserRuleCall_3()); }
	ruleEOL
	{ after(grammarAccess.getPrintAccess().getEOLParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Insert__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__0__Impl
	rule__Insert__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getInsertKeyword_0()); }
	'.insert('
	{ after(grammarAccess.getInsertAccess().getInsertKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__1__Impl
	rule__Insert__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getExpressionAssignment_1()); }
	(rule__Insert__ExpressionAssignment_1)
	{ after(grammarAccess.getInsertAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__2__Impl
	rule__Insert__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getInsertAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getEOLParserRuleCall_3()); }
	ruleEOL
	{ after(grammarAccess.getInsertAccess().getEOLParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modify__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__0__Impl
	rule__Modify__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getModifyKeyword_0()); }
	'.modify('
	{ after(grammarAccess.getModifyAccess().getModifyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__1__Impl
	rule__Modify__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getExpressionAssignment_1()); }
	(rule__Modify__ExpressionAssignment_1)
	{ after(grammarAccess.getModifyAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__2__Impl
	rule__Modify__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getModifyAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__3__Impl
	rule__Modify__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getNewExpressionAssignment_3()); }
	(rule__Modify__NewExpressionAssignment_3)
	{ after(grammarAccess.getModifyAccess().getNewExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__4__Impl
	rule__Modify__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getModifyAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getEOLParserRuleCall_5()); }
	ruleEOL
	{ after(grammarAccess.getModifyAccess().getEOLParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__0__Impl
	rule__Sum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getExpression1Assignment_0()); }
	(rule__Sum__Expression1Assignment_0)
	{ after(grammarAccess.getSumAccess().getExpression1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__1__Impl
	rule__Sum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getPlusSignKeyword_1()); }
	'+'
	{ after(grammarAccess.getSumAccess().getPlusSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__2__Impl
	rule__Sum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getExpression2Assignment_2()); }
	(rule__Sum__Expression2Assignment_2)
	{ after(grammarAccess.getSumAccess().getExpression2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getEOLParserRuleCall_3()); }
	ruleEOL
	{ after(grammarAccess.getSumAccess().getEOLParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__0__Impl
	rule__Product__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getExpression1Assignment_0()); }
	(rule__Product__Expression1Assignment_0)
	{ after(grammarAccess.getProductAccess().getExpression1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__1__Impl
	rule__Product__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getAsteriskKeyword_1()); }
	'*'
	{ after(grammarAccess.getProductAccess().getAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__2__Impl
	rule__Product__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getExpression2Assignment_2()); }
	(rule__Product__Expression2Assignment_2)
	{ after(grammarAccess.getProductAccess().getExpression2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getEOLParserRuleCall_3()); }
	ruleEOL
	{ after(grammarAccess.getProductAccess().getEOLParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getKeyAssignment_0()); }
	(rule__Expression__KeyAssignment_0)
	{ after(grammarAccess.getExpressionAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
	rule__Expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getExpressionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__2__Impl
	rule__Expression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getValueAssignment_2()); }
	(rule__Expression__ValueAssignment_2)
	{ after(grammarAccess.getExpressionAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getEOLParserRuleCall_3()); }
	ruleEOL
	{ after(grammarAccess.getExpressionAccess().getEOLParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group_0__0__Impl
	rule__Array__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getINTTerminalRuleCall_0_1()); }
	(RULE_INT)*
	{ after(grammarAccess.getArrayAccess().getINTTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group_1__0__Impl
	rule__Array__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getSTRINGTerminalRuleCall_1_0()); }
	(RULE_STRING)*
	{ after(grammarAccess.getArrayAccess().getSTRINGTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_1_1()); }
	']'
	{ after(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JsonModel__BaseLoadAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonModelAccess().getBaseLoadLoadParserRuleCall_0_0()); }
		ruleLoad
		{ after(grammarAccess.getJsonModelAccess().getBaseLoadLoadParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonModel__InstructionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonModelAccess().getInstructionsInstructionParserRuleCall_1_0()); }
		ruleInstruction
		{ after(grammarAccess.getJsonModelAccess().getInstructionsInstructionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__SelectAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getSelectSelectParserRuleCall_0_0()); }
		ruleSelect
		{ after(grammarAccess.getInstructionAccess().getSelectSelectParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__StoreAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getStoreStoreParserRuleCall_1_0()); }
		ruleStore
		{ after(grammarAccess.getInstructionAccess().getStoreStoreParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__SaveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getSaveSaveParserRuleCall_2_0()); }
		ruleSave
		{ after(grammarAccess.getInstructionAccess().getSaveSaveParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__PrintAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getPrintPrintParserRuleCall_3_0()); }
		rulePrint
		{ after(grammarAccess.getInstructionAccess().getPrintPrintParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__InsertAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getInsertInsertParserRuleCall_4_0()); }
		ruleInsert
		{ after(grammarAccess.getInstructionAccess().getInsertInsertParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__ModifyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getModifyModifyParserRuleCall_5_0()); }
		ruleModify
		{ after(grammarAccess.getInstructionAccess().getModifyModifyParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__ComputeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getComputeComputeParserRuleCall_6_0()); }
		ruleCompute
		{ after(grammarAccess.getInstructionAccess().getComputeComputeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__FileAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadAccess().getFileFileParserRuleCall_1_0()); }
		ruleFile
		{ after(grammarAccess.getLoadAccess().getFileFileParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSelectAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__FileAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoreAccess().getFileFileParserRuleCall_1_0()); }
		ruleFile
		{ after(grammarAccess.getStoreAccess().getFileFileParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrintAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPrintAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getInsertAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifyAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getModifyAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__NewExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifyAccess().getNewExpressionExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getModifyAccess().getNewExpressionExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Expression1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getExpression1ExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getSumAccess().getExpression1ExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Expression2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getExpression2ExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getSumAccess().getExpression2ExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Expression1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductAccess().getExpression1ExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getProductAccess().getExpression1ExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Expression2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductAccess().getExpression2ExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getProductAccess().getExpression2ExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getKeyKeyParserRuleCall_0_0()); }
		ruleKey
		{ after(grammarAccess.getExpressionAccess().getKeyKeyParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getExpressionAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__StringValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getStringValueSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getValueAccess().getStringValueSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__IntegerValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getIntegerValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getValueAccess().getIntegerValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ArrayAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getArrayArrayParserRuleCall_2_0()); }
		ruleArray
		{ after(grammarAccess.getValueAccess().getArrayArrayParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
