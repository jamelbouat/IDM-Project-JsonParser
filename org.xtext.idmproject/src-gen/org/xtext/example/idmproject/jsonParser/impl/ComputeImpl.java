/**
 * generated by Xtext 2.23.0
 */
package org.xtext.example.idmproject.jsonParser.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.idmproject.jsonParser.Compute;
import org.xtext.example.idmproject.jsonParser.JsonParserPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Compute</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.idmproject.jsonParser.impl.ComputeImpl#getKey1 <em>Key1</em>}</li>
 *   <li>{@link org.xtext.example.idmproject.jsonParser.impl.ComputeImpl#getKey2 <em>Key2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComputeImpl extends MinimalEObjectImpl.Container implements Compute
{
  /**
   * The default value of the '{@link #getKey1() <em>Key1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKey1()
   * @generated
   * @ordered
   */
  protected static final String KEY1_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getKey1() <em>Key1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKey1()
   * @generated
   * @ordered
   */
  protected String key1 = KEY1_EDEFAULT;

  /**
   * The default value of the '{@link #getKey2() <em>Key2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKey2()
   * @generated
   * @ordered
   */
  protected static final String KEY2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getKey2() <em>Key2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKey2()
   * @generated
   * @ordered
   */
  protected String key2 = KEY2_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComputeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JsonParserPackage.Literals.COMPUTE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getKey1()
  {
    return key1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKey1(String newKey1)
  {
    String oldKey1 = key1;
    key1 = newKey1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JsonParserPackage.COMPUTE__KEY1, oldKey1, key1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getKey2()
  {
    return key2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKey2(String newKey2)
  {
    String oldKey2 = key2;
    key2 = newKey2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JsonParserPackage.COMPUTE__KEY2, oldKey2, key2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JsonParserPackage.COMPUTE__KEY1:
        return getKey1();
      case JsonParserPackage.COMPUTE__KEY2:
        return getKey2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JsonParserPackage.COMPUTE__KEY1:
        setKey1((String)newValue);
        return;
      case JsonParserPackage.COMPUTE__KEY2:
        setKey2((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JsonParserPackage.COMPUTE__KEY1:
        setKey1(KEY1_EDEFAULT);
        return;
      case JsonParserPackage.COMPUTE__KEY2:
        setKey2(KEY2_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JsonParserPackage.COMPUTE__KEY1:
        return KEY1_EDEFAULT == null ? key1 != null : !KEY1_EDEFAULT.equals(key1);
      case JsonParserPackage.COMPUTE__KEY2:
        return KEY2_EDEFAULT == null ? key2 != null : !KEY2_EDEFAULT.equals(key2);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (key1: ");
    result.append(key1);
    result.append(", key2: ");
    result.append(key2);
    result.append(')');
    return result.toString();
  }

} //ComputeImpl
